default: &defaults
  docker:
    - image: sedzsoft/vof-ci-ruby-image
      environment:
        - VOF_PATH: /home/circleci/vof
        - PG_HOST: localhost
        - PGUSER: circleci
        - RAILS_ENV: test
        - DATABASE_URL: postgresql://circleci@localhost/circlecidb
    - image: postgres:9.6
      environment:
        - POSTGRES_USER: circleci
        - POSTGRES_DB: circlecidb
        - POSTGRES_PASSWORD: ''

  working_directory: ~/vof

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: ruby:2.4.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile" }}
          - v1-dependencies-
      - run:
          name: Install System Dependencies
          command: apt-get update -qq && apt-get install -y build-essential postgresql libpq-dev nodejs rake sudo netcat
      - run:
          name: Install Ruby Dependencies
          command: bundle install
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Set up DB
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://circleci@localhost:5432/circlecidb"
      - run:
          name: Install JS runtime
          command: sudo apt-get install -y nodejs
      - run:
          name: Install bundler
          command: |
            sudo gem install --no-ri --no-rdoc bundler
            bundle install
      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile" }}

  test:
    <<: *defaults
    dependencies:
      pre:
        - curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        - sudo dpkg -i google-chrome.deb
        - sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
        - rm google-chrome.deb 

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile" }}
          - v1-dependencies-
      - run:
          name: Install System Dependencies
          command: sudo apt-get update -qq && sudo apt-get install -y build-essential libpq-dev nodejs rake sudo netcat
      - run:
          name: Install bundler
          command: |
            sudo gem install --no-ri --no-rdoc bundler
            bundle install
      - run:
          name: Install java
          command: |
            sudo apt-get install -y default-jre
            sudo apt-get install -y default-jdk
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar

      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run: 
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rspec spec/

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - save_cache:
          paths:
          - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile" }}

  deploy:
    <<: *defaults
    steps:
      - checkout
      - deploy:
          name: Deploy service
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "develop" ]; then
              bash .circleci/deploy.sh
            fi

workflows:
  version: 2
  build_test_and_deployment:
    jobs:
      - build
      - test
          # requires:
          #   - build
      - deploy
          # requires:
          #   - test
